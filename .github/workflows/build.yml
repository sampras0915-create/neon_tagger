name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # ← ここに env を置くのが正解
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      # p4a の依存チェックをスキップ（CIで止まらないように）
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"
      # sdkmanager や build-tools を PATH に追加
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ env.PATH }}

    steps:
      - uses: actions/checkout@v4

      # 1) 必要なパッケージ
      - name: Install system packages
        shell: bash
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-venv \
            git unzip wget \
            openjdk-17-jdk-headless \
            zlib1g-dev libffi-dev libssl-dev

          python3 -m pip install --upgrade pip

      # 2) Android SDK（cmdline-tools）を配置してライセンス同意
      - name: Install Android SDK cmdline-tools & accept licenses
        shell: bash
        run: |
          set -eux
          mkdir -p "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"

          # cmdline-tools を取得
          tmpzip=/tmp/cmdline-tools.zip
          wget -q -O "$tmpzip" https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          mkdir -p cmdline-tools
          unzip -q "$tmpzip" -d cmdline-tools
          # 期待ディレクトリ構造: cmdline-tools/latest/...
          if [ -d cmdline-tools/cmdline-tools ]; then
            mv cmdline-tools/cmdline-tools cmdline-tools/latest
          elif [ ! -d cmdline-tools/latest ]; then
            # unzip 結果が異なる場合の保険
            mv cmdline-tools/* cmdline-tools/latest || true
          fi

          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      # 3) 必要な Android プラットフォーム類
      - name: Install Android platforms & build-tools
        shell: bash
        run: |
          set -eux
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;36.1.0" \
            "ndk;26.3.11579264"

      # 4) Buildozer / p4a
      - name: Install Buildozer & p4a
        shell: bash
        run: |
          set -eux
          python3 -m pip install --upgrade buildozer Cython virtualenv

      # 5) ビルド（詳細ログ）
      - name: Build with Buildozer
        shell: bash
        env:
          # 念のため step 単位でも可視化
          ANDROIDSDK: ${{ env.ANDROID_SDK_ROOT }}
          ANDROIDNDK: ${{ env.ANDROID_SDK_ROOT }}/ndk/26.3.11579264
          ANDROIDAPI: "33"
          NDKAPI: "21"
        run: |
          set -eux
          echo "ANDROIDSDK=$ANDROIDSDK"
          echo "ANDROIDNDK=$ANDROIDNDK"
          echo "ANDROIDAPI=$ANDROIDAPI"
          echo "NDKAPI=$NDKAPI"

          # ビルド
          buildozer -v android debug

      # 6) 生成APKを成果物としてアップロード
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
