name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      # Buildozer/p4a の依存チェックをスキップ（CI用の高速化）
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"

    steps:
      # 1) 取得
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Java (Android ビルドに必要)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3) OS 依存パッケージ
      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-venv \
            git zip unzip \
            libffi-dev libssl-dev \
            libstdc++6 zlib1g

      # 4) Python ツール（Buildozer / p4a / Cython）
      - name: Install Python deps (Buildozer & p4a)
        run: |
          set -eux
          python3 -m pip install --upgrade pip
          python3 -m pip install \
            cython==0.29.36 \
            buildozer \
            python-for-android \
            virtualenv sh

      # 5) Android cmdline-tools の取得
      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}"
          cd "${ANDROID_SDK_ROOT}"
          # cmdline-tools (latest) をダウンロード
          URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
          curl -L "$URL" -o cmdtools.zip
          unzip -q cmdtools.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm -f cmdtools.zip
          echo "export ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "export ANDROID_HOME=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/build-tools/36.0.1" >> $GITHUB_PATH

      # 6) ライセンス同意 & 必要パッケージ導入（ここが重要！）
      - name: Accept Android licenses & install packages
        run: |
          set -eux
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;36.0.1" \
            "ndk;26.3.11579264"

      # 7) ログ確認用（任意）
      - name: Print Android SDK layout
        run: |
          set -eux
          sdkmanager --list | head -n 50 || true
          ls -la "${ANDROID_SDK_ROOT}/build-tools" || true

      # 8) Buildozer 実行（プロジェクト直下に buildozer.spec がある想定）
      - name: Build APK
        working-directory: .
        run: |
          set -eux
          buildozer -v android debug

      # 9) 生成物をアップロード（bin/*.apk）
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
