name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash   # ← 明示的に bash を使う
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-venv openjdk-17-jdk wget unzip
          python3 -m pip install --upgrade pip
          pip install buildozer Cython virtualenv

      - name: Install Android SDK and accept licenses
        env:
          ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
          ANDROID_HOME:     ${{ github.workspace }}/android-sdk
        run: |
          set -eux
          mkdir -p "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          rm -f cmdline-tools.zip
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;36.0.0"

      - name: Build with Buildozer
        env:
          ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
          ANDROID_HOME:     ${{ github.workspace }}/android-sdk
        run: |
          set -eux
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
