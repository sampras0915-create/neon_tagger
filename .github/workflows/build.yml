name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME:     ${{ github.workspace }}/android-sdk
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev

      - name: Install Python deps
        run: |
          set -eux
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install "Cython==0.29.36" buildozer python-for-android virtualenv sh

      # ---- Android cmdline-tools
      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -fsSL -o cmdline-tools.zip \
            https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip && rm -f cmdline-tools.zip
          mv cmdline-tools latest
          # Buildozer が見るレガシー tools/bin も用意
          mkdir -p "${ANDROID_SDK_ROOT}/tools"
          ln -sfn "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" "${ANDROID_SDK_ROOT}/tools/bin"

      - name: Link SDK for Buildozer (compat) & PATH
        run: |
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"          >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/build-tools/36.1.0"      >> $GITHUB_PATH
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sfn "${ANDROID_SDK_ROOT}" "$HOME/.buildozer/android/platform/android-sdk"

      - name: Accept Android licenses & install packages
        run: |
          set -eux
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "build-tools;36.1.0" \
            "platforms;android-33" \
            "ndk;25.1.8937393"
          # Buildozer / p4a が使う NDK/SDK 変数も明示
          {
            echo "ANDROID_NDK_HOME=${ANDROID_SDK_ROOT}/ndk/25.1.8937393"
            echo "ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk/25.1.8937393"
            echo "ANDROIDSDK=${ANDROID_SDK_ROOT}"
            echo "ANDROIDNDK=${ANDROID_SDK_ROOT}/ndk/25.1.8937393"
            echo "ANDROIDAPI=33"
            echo "NDKAPI=21"
          } >> $GITHUB_ENV

      # ---- Build（失敗の可視化を強化）
      - name: Build APK
        run: |
          set -euo pipefail
          mkdir -p .buildozer/logs
          # 既存ログをクリア（差分で惑わされないように）
          : > .buildozer/logs/buildozer.log || true

          # 実行（終了コードはそのまま拾う）
          if ! buildozer -v android debug | tee .buildozer/logs/buildozer-ci.log ; then
            echo "::group::Last 200 lines of build log"
            tail -n 200 .buildozer/logs/buildozer-ci.log || true
            echo "::endgroup::"
            exit 1
          fi

          # ビルドが 0 で終わっても APK が無ければ失敗扱いにする
          shopt -s nullglob
          APKS=(bin/*.apk)
          if [ ${#APKS[@]} -eq 0 ]; then
            echo "No APK was produced under bin/*.apk"
            echo "::group::Last 200 lines of build log"
            tail -n 200 .buildozer/logs/buildozer-ci.log || true
            echo "::endgroup::"
            exit 1
          fi
          echo "Found APK: ${APKS[*]}"

      # ---- ログは常に保存
      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/logs/*.log
          if-no-files-found: warn
          compression-level: 9
          retention-days: 7

      # ---- APK は成功時のみ保存
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
          if-no-files-found: error
          retention-days: 7
