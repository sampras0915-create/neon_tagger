name: Build APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) リポジトリ取得
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK（Android ツール用）
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # 3) OS 依存ライブラリ
      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev libncurses5

      # 4) Buildozer / python-for-android
      - name: Install Python deps
        run: |
          set -eux
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade \
            Cython==0.29.36 \
            buildozer \
            python-for-android \
            virtualenv sh

      # 5) Android cmdline-tools を用意（sdkmanager を使える状態に）
      - name: Install Android cmdline-tools
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -eux
          SDK="$ANDROID_SDK_ROOT"
          mkdir -p "$SDK/cmdline-tools"
          cd /tmp
          curl -fsSLo cmdline.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline.zip
          # 配置場所は ".../cmdline-tools/latest"
          rm -rf "$SDK/cmdline-tools/latest"
          mkdir -p "$SDK/cmdline-tools/latest"
          mv cmdline-tools/* "$SDK/cmdline-tools/latest/"
          rm -rf cmdline-tools cmdline.zip

      # 6) ライセンス同意 & パッケージ導入（※ 33 系で固定）
      - name: Accept Android licenses & install packages
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -eux
          SDKMAN="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          yes | "$SDKMAN" --licenses
          "$SDKMAN" "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

      # 7) Buildozer が参照する環境変数を設定
      - name: Configure Buildozer env
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -eux
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROIDNDK=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROIDAPI=33" >> $GITHUB_ENV
          echo "NDKAPI=21" >> $GITHUB_ENV

      # 8) 実ビルド（リポジトリ直下に buildozer.spec がある想定）
      - name: Build APK
        env:
          P4A_NO_DEPS_CHECK: "1"
          PYTHONFORANDROID_NO_DEPS_CHECK: "1"
        run: |
          set -eux
          buildozer -v android debug

      # 9) 生成 APK を成果物としてアップロード
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
