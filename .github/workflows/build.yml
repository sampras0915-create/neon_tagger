name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME:     ${{ github.workspace }}/android-sdk
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev

      - name: Install Python deps
        run: |
          set -eux
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install "Cython==0.29.36" buildozer python-for-android virtualenv sh

      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -fsSL -o cmdline-tools.zip \
            https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip
          rm -f cmdline-tools.zip
          mv cmdline-tools latest
          # Buildozer が期待する legacy パスも用意
          mkdir -p "${ANDROID_SDK_ROOT}/tools"
          ln -sfn "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" "${ANDROID_SDK_ROOT}/tools/bin"

      - name: Link SDK for Buildozer (compat) & PATH
        run: |
          set -eux
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"          >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/build-tools/36.1.0"      >> $GITHUB_PATH
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sfn "${ANDROID_SDK_ROOT}" "$HOME/.buildozer/android/platform/android-sdk"

      - name: Accept Android licenses & install packages
        run: |
          set -eux
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "build-tools;36.1.0" \
            "platforms;android-33" \
            "ndk;25.1.8937393"
          echo "ANDROID_NDK_HOME=${ANDROID_SDK_ROOT}/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROIDSDK=${ANDROID_SDK_ROOT}"                         >> $GITHUB_ENV
          echo "ANDROIDNDK=${ANDROID_SDK_ROOT}/ndk/25.1.8937393"       >> $GITHUB_ENV
          echo "ANDROIDAPI=33"                                         >> $GITHUB_ENV
          echo "NDKAPI=21"                                             >> $GITHUB_ENV

      - name: Build APK
        run: |
          set -eux
          # 失敗時に備えてログ出力を強化
          echo "=== ENV ==="; env | sort | sed 's/^\(GH_TOKEN\|GITHUB_TOKEN\)=.*/\1=***hidden***/' || true
          buildozer -v android debug || { echo "Buildozer returned non-zero."; exit 1; }

      # --- ここから診断用のログ収集（失敗しても必ず実行）
      - name: Collect build logs
        if: always()
        run: |
          set -eux
          mkdir -p build-logs
          # Buildozer / p4a の代表的なログ・設定を回収
          cp -rf .buildozer build-logs/.buildozer || true
          cp -rf ~/.buildozer build-logs/home-buildozer || true
          # よく見るログ位置を明示
          find build-logs -maxdepth 4 -type f -name "*.log" -o -name "buildozer.spec" || true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build-logs

      # --- APK の回収（見つからない場合は警告で理由を表示）
      - name: Upload APK
        if: always()
        run: |
          set -eux
          shopt -s nullglob
          files=(bin/*.apk)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::warning title=No APK::bin/*.apk が見つかりません。上の『build-logs』アーティファクト内の *.log を確認してください。"
            exit 0
          fi
        shell: bash

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
