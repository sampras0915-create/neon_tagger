Name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      # p4a/buildozer が独自に SDK/NDK を落とさないよう抑止（任意）
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # ---- OS 依存パッケージ（Ubuntu 24.04 互換）
      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev

      # ---- Python / Buildozer 周り
      - name: Install Python deps
        run: |
          set -eux
          python3 -m pip install --upgrade pip wheel
          # Cython は p4a の相性から固定を推奨
          python3 -m pip install "Cython==0.29.36" buildozer python-for-android virtualenv sh

      # ---- Android cmdline-tools を配置
      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}"
          cd "${ANDROID_SDK_ROOT}"
          curl -fsSL -o cmdline-tools.zip \
            https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip
          
          # 【修正箇所】: mvで自己のサブディレクトリへの移動エラーを回避
          # 展開でできた cmdline-tools を、一時的な名前に変更
          mv cmdline-tools temp_tools 
          
          # 新しい cmdline-tools ディレクトリを作成
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          
          # 一時的なディレクトリを、SDK標準の latest ディレクトリとして移動
          mv temp_tools "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
          
          rm -f cmdline-tools.zip
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"

      # ---- sdkmanager を使えるよう PATH を通し、Buildozer 既定パスにもリンク
      - name: Link SDK for Buildozer (compat)
        run: |
          set -eux
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH
          # Buildozer が見る既定パスへシンボリックリンク
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sfn "${ANDROID_SDK_ROOT}" "$HOME/.buildozer/android/platform/android-sdk"

      # ---- ライセンス同意 & 必須パッケージ導入
      - name: Accept Android licenses & install packages
        run: |
          set -eux
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "build-tools;36.1.0" \
            "platforms;android-33" \
            "ndk;25.1.8937393"
          sdkmanager --list | head -n 50 || true

      # ---- Buildozer が参照する環境の表示（任意・デバッグ用）
      - name: Print Android SDK layout
        run: |
          set -eux
          ls -la "${ANDROID_SDK_ROOT}"
          ls -la "${ANDROID_SDK_ROOT}/build-tools" || true
          which sdkmanager

      # ---- APK ビルド
      - name: Build APK
        working-directory: .
        run: |
          set -eux
          buildozer -v android debug

      # ---- 生成物アップロード
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
