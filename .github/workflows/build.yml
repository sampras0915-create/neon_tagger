name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME:     ${{ github.workspace }}/android-sdk
      P4A_NO_DEPS_CHECK: "1"
      PYTHONFORANDROID_NO_DEPS_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install OS deps
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip git \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev

      - name: Install Python deps
        run: |
          set -eux
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install "Cython==0.29.36" buildozer python-for-android virtualenv sh

      # --- cmdline-tools を設置（latest）+ legacy 互換
      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -fsSL -o cmdline-tools.zip \
            https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip
          rm -f cmdline-tools.zip
          mv cmdline-tools latest
          # legacy 互換: tools/bin が存在するように
          mkdir -p "${ANDROID_SDK_ROOT}/tools/bin"
          ln -sfn "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" "${ANDROID_SDK_ROOT}/tools/bin/sdkmanager"

      # --- PATH と Buildozer 互換パスを用意
      - name: Link SDK/NDK for Buildozer (compat) & PATH
        run: |
          set -eux
          # ランナー PATH
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools"          >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/build-tools/36.1.0"      >> $GITHUB_PATH

          # Buildozer 既定の SDK 位置へミラー（シンボリックリンク）
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sfn "${ANDROID_SDK_ROOT}" "$HOME/.buildozer/android/platform/android-sdk"
          # Buildozer が直接見る exact パス（tools/bin/sdkmanager）も作っておく
          mkdir -p "$HOME/.buildozer/android/platform/android-sdk/tools/bin"
          ln -sfn "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" \
                 "$HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager"

      - name: Accept Android licenses & install packages
        run: |
          set -eux
          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "build-tools;36.1.0" \
            "platforms;android-33" \
            "ndk;25.1.8937393"

          # 環境変数を後続ステップへ
          echo "ANDROID_NDK_HOME=${ANDROID_SDK_ROOT}/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROIDSDK=${ANDROID_SDK_ROOT}"                         >> $GITHUB_ENV
          echo "ANDROIDNDK=${ANDROID_SDK_ROOT}/ndk/25.1.8937393"       >> $GITHUB_ENV
          echo "ANDROIDAPI=33"                                         >> $GITHUB_ENV
          echo "NDKAPI=21"                                             >> $GITHUB_ENV

          # Buildozer が古い命名で探す NDK パスにも互換リンク（android-ndk-r25b）
          ln -sfn "${ANDROID_SDK_ROOT}/ndk/25.1.8937393" \
                 "$HOME/.buildozer/android/platform/android-ndk-r25b"

      - name: Print Android SDK layout (debug)
        run: |
          set -eux
          env | sort | grep -E "ANDROID|P4A|PYTHONFORANDROID" || true
          which sdkmanager
          ls -la "${ANDROID_SDK_ROOT}"
          ls -la "${ANDROID_SDK_ROOT}/build-tools/36.1.0" || true
          ls -l "$HOME/.buildozer/android/platform/android-sdk/tools/bin" || true
          [ -x "$HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager" ] && echo "sdkmanager OK"
          ls -l "$HOME/.buildozer/android/platform" || true

      - name: Build APK
        run: |
          set -eux
          buildozer -v android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: neon-tagger-apk
          path: bin/*.apk
